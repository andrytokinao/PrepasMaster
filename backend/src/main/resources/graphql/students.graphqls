
type Formation {
    id:Int
    name:String
    desabled:Boolean
    description:String
}
type Parcours{
    id:Int
    formations:[Formation]
    userApp:UserApp
    company:Company
    durree:Int
    unitiDurre:String
    prix:Float
    description:String
}
type Company {
    id:Int
    name:String
    slogan:String
    description:String
    postes:[Poste]
}
input CompanyInput {
    id:Int!
    name:String
    slogan:String
    description:String
}
input  PosteImput {
    id:Int
    debut:String
    fin : String
    description:String
    poste:String
    companyId:Int
    username:String,
}
type Poste{
    id:Int
    debut:String
    fin : String
    description:String
    poste:String
    company:Company
    userApp:UserApp
}

type Matiere{
    id:String
    name:String
    description:String
}
type UserApp{
    id:String
    username:String
    firstname:String
    lastname:String
    contact:String
    email:String
    adress:String
    cin:String
    roles:String
    postes:[Poste]
    parcours:[Parcours]
}
type Compte {
    id:String,
    encaisser:Float,
    toPayer:Float,
    user:UserApp
}

input UserAppImput{
    id:String
    firstname:String
    lastname:String
    contact:String
    email:String
    adress:String
    cin:String,
    idCompany:Int,
    userResponsable:String
    codeParenage:String,

}


input ParcoursImput{
    id:Int
    formationIds:[Int]
    userId:String
    companyId:Int
    responsableId:String
    durree:Float
    unitiDurre:String
    prix:Float
    description:String
}
input UserImput {
    id:String,
    username:String,
    password :String,
    firstname:String,
    lastname:String,
    contact:String,
    cin:String,
    email:String,
    adress:String,
    codeParenage:String,
    idCompany:Int,
    userResponsable:String
}





